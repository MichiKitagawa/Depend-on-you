// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// shared/schema.ts の UserID, PostID 等を参照

model Playlist {
  id          String   @id @default(uuid())
  userId      String   // UserID 型
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  items       PlaylistItem[]

  @@index([userId])
}

model PlaylistItem {
  id         String   @id @default(uuid())
  playlistId String
  playlist   Playlist @relation(fields: [playlistId], references: [id], onDelete: Cascade)
  postId     String   // PostID 型
  order      Int      // プレイリスト内の順序
  addedAt    DateTime @default(now())

  @@unique([playlistId, postId]) // 同じプレイリストに同じ投稿は1つまで
  @@index([playlistId])
  @@index([postId])
}

model Review {
  id        String   @id @default(uuid())
  userId    String   // UserID 型
  postId    String   // PostID 型
  rating    Int      // 評価 (例: 1-5)
  text      String?  // レビュー本文
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, postId]) // 1ユーザー1投稿につき1レビュー
  @@index([userId])
  @@index([postId])
  @@index([rating])
}
